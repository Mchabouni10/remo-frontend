apply plugin: 'com.android.application'

android {
    namespace "Rawdah.Company.remoapp" // Matches your appId, replaces package attribute
    compileSdk rootProject.ext.compileSdkVersion ?: 34 // Default to 34 (Android 14) if not defined
    defaultConfig {
        applicationId "Rawdah.Company.remoapp"
        minSdkVersion rootProject.ext.minSdkVersion ?: 21 // Default to 21 (Android 5.0)
        targetSdkVersion rootProject.ext.targetSdkVersion ?: 34 // Default to 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
            // Files and dirs to omit from the packaged assets dir
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true // Ensures debug builds are inspectable
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21 // Java 21 for modern compatibility
        targetCompatibility JavaVersion.VERSION_21
    }
}

repositories {
    google()        // Google Maven repository
    mavenCentral()  // Central Maven repository
    // Removed flatDir; dependencies come from Maven/Google
}

dependencies {
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation "androidx.coordinatorlayout:coordinatorlayout:1.3.0"
    implementation "androidx.core:core-splashscreen:1.0.1"
    implementation project(':capacitor-android')
    implementation project(':capacitor-cordova-android-plugins')
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.2.1"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.6.1"
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception ignored) { // Fixed: Named 'ignored' to suppress warning
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
